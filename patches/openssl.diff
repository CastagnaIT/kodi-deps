--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,25 @@
+cmake_minimum_required(VERSION 3.0)
+
+project(openssl VERSION 1.1.1 LANGUAGES C)
+
+include(CheckSymbolExists) 
+check_symbol_exists(_X86_ "Windows.h" _X86_)
+check_symbol_exists(_AMD64_ "Windows.h" _AMD64_)
+
+if(_X86_)
+	message(STATUS "Win32")
+	set(OPENSSL_PLATFORM VC-WIN32)
+elseif(_AMD64_)
+	message(STATUS "x64")
+	set(OPENSSL_PLATFORM VC-WIN64A)
+else()
+	message(FATAL_ERROR "Unsupported target architecture")
+endif()
+
+message(STATUS "perl Configure ${OPENSSL_PLATFORM} disable-capieng enable-static-engine no-asm no-dso no-shared no-tests no-ui-console --prefix=${CMAKE_INSTALL_PREFIX}")
+execute_process(COMMAND perl Configure ${OPENSSL_PLATFORM} disable-capieng enable-static-engine no-asm no-dso no-shared no-tests no-ui-console --prefix=${CMAKE_INSTALL_PREFIX} WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+
+add_custom_target(openssl ALL COMMAND nmake build_generated libcrypto.lib libssl.lib WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
+
+install(DIRECTORY include/openssl DESTINATION include/ FILES_MATCHING PATTERN "*.h")
+install(FILES libcrypto.lib libssl.lib DESTINATION lib/)
--- a/Configurations/windows-makefile.tmpl
+++ b/Configurations/windows-makefile.tmpl
@@ -162,8 +162,8 @@
 
 ##### User defined commands and flags ################################
 
-CC={- $config{CC} -}
-CPP={- $config{CPP} -}
+CC="{- $config{CC} -}"
+CPP="{- $config{CPP} -}"
 CPPFLAGS={- our $cppflags1 = join(" ",
                                   (map { "-D".$_} @{$config{CPPDEFINES}}),
                                   (map { " /I ".$_} @{$config{CPPINCLUDES}}),
--- a/ms/uplink-x86_64.pl
+++ b/ms/uplink-x86_64.pl
@@ -8,7 +8,7 @@
 
 $output=pop;
 $0 =~ m/(.*[\/\\])[^\/\\]+$/; $dir=$1;
-open OUT,"| \"$^X\" \"${dir}../crypto/perlasm/x86_64-xlate.pl\" \"$output\"";
+open OUT,"| \"$^X\" \"${dir}/../crypto/perlasm/x86_64-xlate.pl\" \"$output\"";
 *STDOUT=*OUT;
 push(@INC,"${dir}.");
 
