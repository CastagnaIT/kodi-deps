--- /dev/null
+++ b/CMakeLists.txt
@@ -0,0 +1,138 @@
+cmake_minimum_required(VERSION 3.2)
+
+file(STRINGS PIL/version.py _pillow_version_str REGEX "__version__ = '[0-9.]+'")
+string(REGEX REPLACE "__version__ = '([0-9.]+).*$" "\\1" PILLOW_VERSION ${_pillow_version_str})
+unset(_pillow_version_str)
+
+project(pillow VERSION 4.2.1 LANGUAGES C)
+
+find_package(python REQUIRED NO_MODULE)
+find_package(freetype REQUIRED NO_MODULE)
+find_package(zlib REQUIRED NO_MODULE)
+find_package(libjpeg-turbo REQUIRED NO_MODULE)
+
+list(APPEND INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/libImaging)
+
+function(addPythonExtension name)
+  cmake_parse_arguments(addPythonExtension "" "" "SOURCES;LIBRARIES;MACROS;INCLUDES" ${ARGN})
+  add_library(${name} SHARED ${addPythonExtension_SOURCES})
+  set_target_properties(${name} PROPERTIES SUFFIX ".pyd")
+  target_include_directories(${name} PRIVATE "$<BUILD_INTERFACE:${addPythonExtension_INCLUDES};${INCLUDE_DIRS};${PYTHON_INCLUDE_DIRS}>")
+  target_compile_definitions(${name} PRIVATE ${addPythonExtension_MACROS})
+  target_link_libraries(${name} PRIVATE ${PYTHON_LIBRARIES})
+  foreach(lib ${addPythonExtension_LIBRARIES})
+    target_link_libraries(${name} PRIVATE ${lib})
+  endforeach()
+  install(TARGETS ${name} RUNTIME DESTINATION bin/Python/Lib/site-packages/PIL)
+endfunction()
+
+addPythonExtension(_imaging
+  SOURCES
+    _imaging.c
+    decode.c
+    display.c
+    encode.c
+    map.c
+    outline.c
+    path.c
+    libImaging/Access.c
+    libImaging/AlphaComposite.c
+    libImaging/Bands.c
+    libImaging/BcnDecode.c
+    libImaging/Bit.h
+    libImaging/BitDecode.c
+    libImaging/Blend.c
+    libImaging/BoxBlur.c
+    libImaging/Chops.c
+    libImaging/codec_fd.c
+    libImaging/Convert.c
+    libImaging/ConvertYCbCr.c
+    libImaging/Copy.c
+    libImaging/Crc32.c
+    libImaging/Crop.c
+    libImaging/Dib.c
+    libImaging/Draw.c
+    libImaging/Effects.c
+    libImaging/EpsEncode.c
+    libImaging/File.c
+    libImaging/Fill.c
+    libImaging/Filter.c
+    libImaging/FliDecode.c
+    libImaging/Geometry.c
+    libImaging/GetBBox.c
+    libImaging/Gif.h
+    libImaging/GifDecode.c
+    libImaging/GifEncode.c
+    libImaging/HexDecode.c
+    libImaging/Histo.c
+    libImaging/Imaging.h
+    libImaging/ImDib.h
+    libImaging/ImPlatform.h
+    libImaging/Jpeg.h
+    libImaging/Jpeg2K.h
+    libImaging/Jpeg2KDecode.c
+    libImaging/Jpeg2KEncode.c
+    libImaging/JpegDecode.c
+    libImaging/JpegEncode.c
+    libImaging/Lzw.h
+    libImaging/LzwDecode.c
+    libImaging/Matrix.c
+    libImaging/ModeFilter.c
+    libImaging/Negative.c
+    libImaging/Offset.c
+    libImaging/Pack.c
+    libImaging/PackDecode.c
+    libImaging/Palette.c
+    libImaging/Paste.c
+    libImaging/PcdDecode.c
+    libImaging/PcxDecode.c
+    libImaging/PcxEncode.c
+    libImaging/Point.c
+    libImaging/Quant.c
+    libImaging/QuantHash.c
+    libImaging/QuantHash.h
+    libImaging/QuantHeap.c
+    libImaging/QuantHeap.h
+    libImaging/QuantOctree.c
+    libImaging/QuantOctree.h
+    libImaging/QuantPngQuant.c
+    libImaging/QuantPngQuant.h
+    libImaging/QuantTypes.h
+    libImaging/RankFilter.c
+    libImaging/Raw.h
+    libImaging/RawDecode.c
+    libImaging/RawEncode.c
+    libImaging/Resample.c
+    libImaging/Storage.c
+    libImaging/SunRleDecode.c
+    libImaging/TgaRleDecode.c
+    libImaging/TiffDecode.c
+    libImaging/TiffDecode.h
+    libImaging/Unpack.c
+    libImaging/UnpackYCC.c
+    libImaging/UnsharpMask.c
+    libImaging/XbmDecode.c
+    libImaging/XbmEncode.c
+    libImaging/Zip.h
+    libImaging/ZipDecode.c
+    libImaging/ZipEncode.c
+  LIBRARIES
+    libjpeg-turbo::jpeg-static
+    zlib::zlibstatic
+  MACROS
+    PILLOW_VERSION="${PILLOW_VERSION}"
+    HAVE_LIBZ
+    HAVE_LIBJPEG
+)
+
+addPythonExtension(_imagingft
+  SOURCES
+    _imagingft.c
+  LIBRARIES
+    freetype::freetype
+)
+
+addPythonExtension(_imagingmath SOURCES _imagingmath.c)
+addPythonExtension(_imagingmorph SOURCES _imagingmorph.c)
+
+install(DIRECTORY PIL DESTINATION bin/Python/Lib/site-packages)
